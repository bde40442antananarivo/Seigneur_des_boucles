#!/bin/bash
EXEC="./code/gollum"
ARG="125000,4000000"
REF_FILE="reference.out"
TMP_OUTPUT="output.txt"
FORBIDDEN_FILE="./parameters/forbidden.txt"

echo "üîç V√©rification des fichiers source..."

FILES=$(find . -name "*.c" -o -name "*.h")
if [ -z "$FILES" ]; then
  echo "‚ùå Aucun fichier source trouv√©."
  exit 1
fi

echo "üßπ V√©rification de la norme (norminette)..."

norminette $FILES | grep -v "OK!" && echo "‚ùå Norminette KO" && exit 1
echo "‚úÖ Norminette OK"

if [ ! -f "$FORBIDDEN_FILE" ]; then
  echo "‚ö†Ô∏è Fichier forbidden.txt manquant. Cr√©ation d‚Äôun exemple..."
  echo -e "ngets\nsystem\nstrtok\nstrdup\n" >"$FORBIDDEN_FILE"
fi

echo "‚õî V√©rification des fonctions interdites..."

FOUND=0
while IFS= read -r FUNC; do
  # Ignore les lignes vides ou contenant uniquement des espaces
  if [ -n "$(echo "$FUNC" | xargs)" ]; then
    if grep -rnw --include=\*.c --include=\*.h . -e "$FUNC" >/dev/null; then
      echo "‚ùå Fonction interdite utilis√©e : $FUNC"
      FOUND=1
    fi
  fi
done <"$FORBIDDEN_FILE"

[ "$FOUND" -eq 1 ] && exit 1
echo "‚úÖ Aucune fonction interdite utilis√©e."

echo "‚öôÔ∏è Compilation (si n√©cessaire)..."
if [ ! -x "$EXEC" ]; then
  echo "üö´ Ex√©cutable $EXEC non trouv√©. Compilez manuellement."
  exit 1
fi

IFS=',' read -ra VALUES <<<"$ARG"

for val in "${VALUES[@]}"; do
  val=$(echo "$val" | xargs) # clean all space

  echo "üöÄ Ex√©cution avec ARG = $val..."

  START=$(date +%s.%N)
  $EXEC "$val" >"$TMP_OUTPUT"
  END=$(date +%s.%N)
  TIME=$(echo "$END - $START" | bc)

  # Pr√©parer le fichier de r√©f√©rence sp√©cifique
  REF_FILE="./reference/reference_$val.out"
  if [ ! -f "$REF_FILE" ]; then
    echo "‚ö†Ô∏è Fichier de r√©f√©rence '$REF_FILE' manquant."
    exit 1
  fi

  echo "üì§ V√©rification de la sortie pour ARG = $val..."
  if diff -q "$TMP_OUTPUT" "$REF_FILE" >/dev/null; then
    echo "‚úÖ R√©sultat correct pour ARG = $val"
  else
    echo "‚ùå R√©sultat incorrect pour ARG = $val ! Diff√©rences :"
    diff "$TMP_OUTPUT" "$REF_FILE"
    exit 1
  fi

  echo "‚è±Ô∏è Temps d'ex√©cution : $TIME secondes"
done

echo "üéâ Tous les tests sont PASS√âS !"
